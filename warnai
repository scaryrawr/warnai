#!/usr/bin/env bash

dir=$HOME/.themes/warna/
conf=$HOME/.config/
file=$HOME/.Xresources
arr=()
skip_render=false
pushd $(dirname $(readlink -f $0)) >/dev/null 2>&1

load_colors(){
	colors[bg]=$(grep "background:" $1 | awk -F\# '{print $2}' | head -1)
	for i in {1..8}; do
		colors[i]=$(grep "color$i *:" $1 | awk -F\# '{print $2}' | head -1)
	done
}

xfwm_themer(){
	if [ ! -d "$dir"xfwm4/ ]; then
	  mkdir -p "$dir"xfwm4/
	else
		rm "$dir"xfwm4/*
	fi	
	cp xfwm4/$1/* "$dir"xfwm4/
	sed -i s/"color_bg"/"${colors[bg]}"/g "$dir"xfwm4/*
	for i in {1..8}; do
		sed -i s/"color_$i"/"${colors[$i]}"/g "$dir"xfwm4/*;
	done
	cp -r xfce-notify-4.0 "$dir"
	sed -i s/"color_bg"/"${colors[bg]}"/g "$dir"xfce-notify-4.0/*
	for i in {1..8}; do
		sed -i s/"color_$i"/"${colors[$i]}"/g "$dir"xfce-notify-4.0/*;
	done
}

ob_themer(){
	if [ ! -d "$dir"openbox-3/ ]; then
	  mkdir -p "$dir"openbox-3/
	else
		rm "$dir"openbox-3/*
	fi	
	cp openbox/$1/* "$dir"openbox-3/
	sed -i s/"color_bg"/"${colors[bg]}"/g "$dir"openbox-3/*
	for i in {1..8}; do
		sed -i s/"color_$i"/"${colors[$i]}"/g "$dir"openbox-3/*;
	done
	if [[ $(cat $HOME/.config/openbox/rc.xml | grep "warna") ]]; then
		openbox --reconfigure
	elif [[ $(which obconf) ]]; then
		obconf >/dev/null 2>&1
	fi
}

tint_themer(){
	cp "$conf"/tint2/tint2rc "$conf"/tint2/tint2rc.old
	cp tint2/$1/* "$conf"tint2/
	sed -i s/"color_bg"/"${colors[bg]}"/g "$conf"tint2/tint2rc
	for i in {1..8}; do
		sed -i s/"color_$i"/"${colors[$i]}"/g "$conf"tint2/tint2rc;
	done
	sed -i -E "s%\/home\/[a-zA-Z0-9_-]+\/%\/home\/${USER}\/%g" ~/.config/tint2/tint2rc
	sed -i s/"color_bg"/"${colors[bg]}"/g "$conf"tint2/menu.svg;
	for i in {1..8}; do
		sed -i s/"color_$i"/"${colors[$i]}"/g "$conf"tint2/menu.svg;
	done
	killall tint2
	tint2 </dev/null &>/dev/null &
}

gtk_themer(){
	cp -r gtk/$1/* "$dir"
	find "$dir" -type f -not -ipath "*.png" -exec sed -i s/"color_bg"/"${colors[bg]}"/g {} \;

	for i in {1..8}; do
		find "$dir" -type f -not -ipath "*.png" -exec sed -i s/"color_$i"/"${colors[$i]}"/g {} \;
	done
}

apply_theme(){
  if command -v xfconf-query &> /dev/null
  then
	echo "Applying theme ..."
	xfconf-query -c xfwm4 -p /general/theme -s "adwaita"
	xfconf-query -c xfwm4 -p /general/theme -s "warna"
	xfconf-query -c xsettings -p /Net/ThemeName -s "adwaita"
	xfconf-query -c xsettings -p /Net/ThemeName -s "warna"
	notify-send "Done changing theme :)"
  fi
}

show_help(){
	cat <<-EOF
	Usage : warnai [options #parameter]

	Avaible options
	--wal   | -w  Generate color from pywal cache
	--xcolor | -xc  Generate color from custom .Xresources file
	--gtk   | -g  Choose gtk theme from list [ fantome ]
	--xfwm  | -xf  Choose xfwm4 theme from list [ pastel | black-paha | one_new | nest1 | diamondo | wendows | tetris | ribbon | just-title-bar | 365 | vela ]
	--openbox | -ob   Choose openbox theme from list [ pelangi | tricky | mek-oes | small-tb | medium-tb | large-tb | small-border | medium-border | slight | slight-medium ]
	--tint2  | -t  Choose tint2 theme from list [ chromeos | chromeos-tinted | chromeos-pelangi | slim-text-dark | slim-text-tinted | slim-text-tinted-dark | floaty-rounded | floaty | slim-float | minima-rounded | less-is-more | chrome-os ]
	--norender| -n  Used with --gtk to stop it from rendering assets
	--help  | -h  Show help

	EOF
}

if [[ $# -eq 0 ]]; then
	show_help
fi

while [[ "$#" -gt 0 ]]; do
  case $1 in
    --wal | -w )
			if [[ -n $xcolor ]]; then
				file=$xcolor
			elif [[ ! -e $HOME/.cache/wal/colors.Xresources ]]; then
				echo "File $HOME/.cache/wal/colors.Xresources doesn't exist"
				echo "You must install pywal first"
				exit 1
			else
				wal=1
				file=$HOME/.cache/wal/colors.Xresources
			fi
			load_colors $file
			;;
		--xcolor | -xc )
			if [[ -z $2 ]]; then
				echo "Please specify the .Xresources location"
				exit 1
			elif [[ ! -e $2 ]]; then
				echo "File $2 doesn't exist"
				exit 1
			else
				xcolor=$2
				file=$xcolor
				shift
			fi
			load_colors $file
			;;
    --gtk | -g )
			if [[ -z $2 ]]; then
				echo "Please specify the gtk theme"
				exit 1
			elif [[ $2 = fantome ]]; then
				gtk=$2
				arr[${#arr[@]}]="gtk"
				shift
			else
				show_help |grep gtk
				exit 1
			fi			
			;;
		--norender | -n )
			skip_render=true
			;;
		--openbox | -ob )
			if [[ -z $2 ]]; then
				echo "Please specify the openbox theme"
				exit 1
			elif [[ "$2" = "pelangi" || "$2" = "tricky" || "$2" = "large-tb" || "$2" == "medium-tb" || "$2" == "small-tb" || "$2" == "medium-border" || "$2" == "small-border" || "$2" == "mek-oes" || "$2" == "slight" || "$2" == "slight-medium" ]]; then
				openbox=$2
				arr[${#arr[@]}]="openbox"
				shift
			else
				show_help |grep openbox
				exit 1
			fi
			;;
		--xfwm | -xf )
			if [[ -z $2 ]]; then
				echo "Please specify the xfwm theme"
				exit 1
			elif [[ "$2" = "pastel" || "$2" = "black-paha" || "$2" = "one_new" || "$2" = "nest1" || "$2" = "diamondo" || "$2" = "wendows" || "$2" = "tetris" || "$2" = "ribbon" || "$2" = "just-title-bar" || "$2" = "365" || "$2" = "vela" ]]; then
				xfwm=$2
				arr[${#arr[@]}]="xfwm"
				shift
			else
				show_help |grep xfwm
				exit 1
			fi
			;;
		--tint2 | -t )
			if [[ -z $2 ]]; then
				echo "Please specify the tint2 theme"
				exit 1
			elif [[ "$2" = "chromeos" || "$2" = "chromeos-tinted" || "$2" = "chromeos-pelangi" || "$2" = "slim-text-dark" || "$2" = "slim-text-tinted" || "$2" = "slim-text-tinted-dark" || "$2" = "floaty-rounded" || "$2" = "floaty" || "$2" = "slim-float" || "$2" = "minima-rounded" || "$2" = "squared-full"  || "$2" = "less-is-more" || "$2" = "chrome-os" ]]; then
				tint2=$2
				arr[${#arr[@]}]="tint2"
				shift
			else
				show_help |grep tint2
				exit 1
			fi
			;;
    --help | -h )
			show_help
      exit
      ;;
    * )
			show_help
      exit 1
  esac
  shift
done

main() {
	if [[ ! -d $HOME/.themes/warna ]]; then
		mkdir $HOME/.themes/warna
	fi
	echo "Generating theme ..."
	i=0
	while [ $i -lt ${#arr[@]} ]; do
		case ${arr[$i]} in
			gtk )
				gtk_themer $gtk
				if [ $skip_render = false ] ;
				then
					pushd "$dir"gtk-2.0/
					python3 "$dir"gtk-2.0/render-assets.py
					popd
					pushd "$dir"gtk-3.0/
					python3 "$dir"gtk-3.0/render-assets.py
					popd
				fi
				;;
			tint2 )
				$(tint_themer $tint2)
				;;
			xfwm )
				$(xfwm_themer $xfwm)
				;;			
			openbox )
				$(ob_themer $openbox)
				;;
		esac
		i=$(expr $i + 1)
	done
	apply_theme
}

if [[ $# -ne 1 ]]; then
	main
fi
